name: Push prod images

on:
  push:
    branches:
      - main

jobs:

  build-linux:
    name: Push prod docker images
    runs-on: ubuntu-20.04

    steps:

      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        id: extract_branch

      - name: Extract branch name on pull request
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          ref: ${{ env.BRANCH_NAME }}

      - name: Get etna-rank version
        run: |
          version=$(sed -rn 's/^  "version": "([0-9.]+)",/\1/p' ./app/app/package.json)
          echo "ETNA_RANK_VERSION=$version" >> $GITHUB_ENV

      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push latest images
        run: |
          REGISTRY_PREFIX=ghcr.io/flavienbwk/etna-rank
          echo "ETNA Rank will be pushed in : $ETNA_RANK_VERSION"

          IMAGE_NGINX=$REGISTRY_PREFIX/nginx TAG=latest docker-compose -f prod.docker-compose.yml build nginx
          IMAGE_NGINX=$REGISTRY_PREFIX/nginx TAG=$ETNA_RANK_VERSION docker-compose -f prod.docker-compose.yml build nginx
          docker push ghcr.io/flavienbwk/etna-rank/nginx:latest
          docker push ghcr.io/flavienbwk/etna-rank/nginx:$ETNA_RANK_VERSION

          IMAGE_API=$REGISTRY_PREFIX/api TAG=latest docker-compose -f prod.docker-compose.yml build api
          IMAGE_API=$REGISTRY_PREFIX/api TAG=$ETNA_RANK_VERSION docker-compose -f prod.docker-compose.yml build api
          docker push ghcr.io/flavienbwk/etna-rank/api:latest
          docker push ghcr.io/flavienbwk/etna-rank/api:$ETNA_RANK_VERSION

          IMAGE_APP=$REGISTRY_PREFIX/app TAG=latest docker-compose -f prod.docker-compose.yml build app
          IMAGE_APP=$REGISTRY_PREFIX/app TAG=$ETNA_RANK_VERSION docker-compose -f prod.docker-compose.yml build app
          docker push ghcr.io/flavienbwk/etna-rank/app:latest
          docker push ghcr.io/flavienbwk/etna-rank/app:$ETNA_RANK_VERSION

      # Create release on main
      - name: Creating release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main' && github.event.pull_request.merged == false
        with:
          name: ${{ env.ETNA_RANK_VERSION }}
          tag_name: ${{ env.ETNA_RANK_VERSION }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
